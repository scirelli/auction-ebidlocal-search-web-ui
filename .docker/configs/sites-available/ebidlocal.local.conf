server {
	listen 80;
	listen [::]:80;
	#listen 80 default_server;
	#listen [::]:80 default_server ipv6only=on;

	# Make site accessible from http://localhost/
	server_name ebidlocal.local;
	
	return 301 https://$host$request_uri;

    root /usr/share/nginx/html/ebidlocal.local/html;
	index index.html index.htm index.php;

    gzip on;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}
    
	location /ebidlocal-api/{
		proxy_pass https://www.ebidlocal.com/;
        proxy_redirect off;

        # Tells the browser this origin may make cross-origin requests
        add_header 'Access-Control-Allow-Origin' "https://www.ebidlocal.com";
        add_header 'Access-Control-Allow-Methods' "POST, GET, OPTIONS";
        # Tells the browser it may show the response, when XmlHttpRequest.withCredentials=true.
        add_header 'Access-Control-Allow-Credentials' 'true';
	}

	error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
        root /usr/share/nginx/html/ebidlocal.local/html;
	}
}


# HTTPS server
#
server {
    listen 443 http2 ssl;
    listen [::]:443 http2 ssl;

	# Make site accessible from https://localhost/
	server_name ebidlocal.local;

    root /usr/share/nginx/html/ebidlocal.local/html;
	index index.html index.htm index.php;

    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    ########################################################################
    # from https://cipherli.st/                                            #
    # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html #
    ########################################################################

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    # Disable preloading HSTS for now.  You can use the commented out header line that includes
    # the "preload" directive if you understand the implications.
    #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

	location / {
		try_files $uri $uri/ =404;
	}

	location /ebidlocal-api/{
		proxy_pass https://www.ebidlocal.com/;
        proxy_redirect off;

        # Tells the browser this origin may make cross-origin requests
        add_header 'Access-Control-Allow-Origin' "https://www.ebidlocal.com";
        add_header 'Access-Control-Allow-Methods' "POST, GET, OPTIONS";
        # Tells the browser it may show the response, when XmlHttpRequest.withCredentials=true.
        add_header 'Access-Control-Allow-Credentials' 'true';
	}

	error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root /usr/share/nginx/html;
	}
}
